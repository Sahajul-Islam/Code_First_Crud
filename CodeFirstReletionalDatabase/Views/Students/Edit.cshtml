@model CodeFirstReletionalDatabase.ViewModels.ViewEdit.StudentEditModel
@{
    ViewBag.Title = "Edit";
}

<div class="row">
    <div class="col-12">
        <h3>Edit Student Information</h3>
        @using (Html.BeginForm("Edit", "Students", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.HiddenFor(x=>x.StudentId)
            <div class="form-group row mb-1">
                @Html.LabelFor(x => x.StudentName, new { @class = "col-form-label col-form-label-sm col-2 text-end" })
                <div class="col-4">
                    @Html.TextBoxFor(x => x.StudentName, new { @class = "form-control form-control-sm" })
                    @Html.ValidationMessageFor(x => x.StudentName, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row mb-1">
                @Html.LabelFor(x => x.AddmitionDate, new { @class = "col-form-label col-form-label-sm col-2 text-end" })
                <div class="col-4">
                    @Html.TextBoxFor(x => x.AddmitionDate, new { @class = "form-control form-control-sm" })
                    @Html.ValidationMessageFor(x => x.AddmitionDate, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row mb-1">
                @Html.LabelFor(x => x.Phone, new { @class = "col-form-label col-form-label-sm col-2 text-end" })
                <div class="col-4">
                    @Html.TextBoxFor(x => x.Phone, new { @class = "form-control form-control-sm", type = "number" })
                    @Html.ValidationMessageFor(x => x.Phone, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row mb-1">
                @Html.LabelFor(x => x.IsRegular, new { @class = "col-form-label col-form-label-sm col-2 text-end" })
                <div class="col-4">
                    @Html.CheckBoxFor(x => x.IsRegular, new { @class = "form-check-input" })
                    @Html.ValidationMessageFor(x => x.IsRegular, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row mb-1">
                @Html.LabelFor(x => x.CourseId, new { @class = "col-form-label col-form-label-sm col-2 text-end" })
                <div class="col-4">
                    @Html.DropDownListFor(x => x.CourseId, new SelectList(ViewBag.course, "CourseId", "CourseName"), "Select one", new { @class = "form-select" })
                    @Html.ValidationMessageFor(x => x.CourseId, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row mb-1">
                @Html.LabelFor(x => x.Photo, new { @class = "col-form-label col-form-label-sm col-2 text-end" })
                <div class="col-4">
                    <img id="currentPhoto" class="img-thumbnail" style="width:350px;cursor:pointer" src="~/Uploads/@ViewBag.currentPhoto" />
                    @Html.TextBoxFor(x => x.Photo, new { @class = "form-control form-control-sm", type = "file", style = "display:none" })
                    @Html.ValidationMessageFor(x => x.Photo, null, new { @class = "text-danger" })
                </div>

            </div>
            <div class="form-group row mb-1">
                <div class="col-4 offset-2">
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </div>
        }
    </div>
    <div class="col-12">
        @Html.ActionLink("Back to list", "Index")
    </div>
</div>
@section script{
    <script src="~/Scripts/jquery-3.6.0.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
    <script>
        $("#currentPhoto").click(() => {
            $("#Photo").trigger("click");
        });
    </script>
}

